source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh

autoload -U compinit && compinit

source "$HOME/.rye/env"

function YAY_WRAPPER() {
  command yay $@;
  echo "";
  echo -ne "\033[1;32mUpdate 'packages.list' ? (y/N)\033[0m";
  read answer;
  if [ "$answer" = "y" ]; then
    command yay -Syu;
    ~/dotfiles/update.sh;
  else 
    echo "Skipping 'packages.list' update.";
  fi
  xmodmap ~/.xmodmap;
}

# common aliases
alias gta='git add'
alias gtr='git reset'
alias gts='git status'
alias gtw='git switch'
alias gtg='git log --graph --oneline --decorate'
alias gtp='git push'
alias gtb='git branch'
alias gtl='git pull'
alias gtc='git commit -m'
alias gtcc='git rm -r --cached .'
alias ghrc='gh repo clone'
alias ghpc='gh pr create -B'
alias ghpm='gh pr merge'
alias ghlc='gh release create'
alias ghll='gh release list'
alias ip="ip -c"
alias ls="ls --color=auto"
alias la="ls -a"
alias ll="ls -l"
alias ssr="simplescreenrecorder"
alias i3reload="i3-msg reload"
alias usb="sudo mount /dev/sda1 ~/usb"
alias usbe="sudo umount /dev/sda1"
alias yay="YAY_WRAPPER"

# functions
function uzp() {
  unzip "$1".zip -d "$1";
}

function gtnb() {
  gtb "$1";
  gtp -u origin "$1";
  gtw "$1";
}

function gti() {
  files=$(find . -size +100M);
  cat .gitignore | grep -v '^#' | grep -v '^$' | while read line; do
    files=$(echo "$files" | grep -v "$line");
  done
  return $files;
}

function gtaa() {
  files=$(gti);
  if [ -n "$files" ]; then
    echo -e "\033[1;31mOver 100M files detected.\033[0m";
    echo -ne "\033[1;32mAdd the files to .gitignore file? (y/N)\033[0m";
    read answer;
    if [ "$answer" = "y" ]; then
      gti >> .gitignore;
    else
      echo "\033[31mPlease remove the files and try again.\033[0m";
      return 1;
    fi
  fi
  git add --all;
}


eval "$(starship init zsh)"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[ -f /usr/share/fzf/key-bindings.zsh ] && source /usr/share/fzf/key-bindings.zsh

