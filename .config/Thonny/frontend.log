14:49:57.265 [MainThread] INFO    thonny: Thonny version: 4.1.6
14:49:57.265 [MainThread] INFO    thonny: cwd: /home/uPiscium
14:49:57.265 [MainThread] INFO    thonny: original argv: ['/usr/bin/python', '/usr/bin/thonny']
14:49:57.265 [MainThread] INFO    thonny: sys.executable: /usr/bin/python
14:49:57.265 [MainThread] INFO    thonny: sys.argv: ['/usr/bin/thonny']
14:49:57.265 [MainThread] INFO    thonny: sys.path: ['/usr/bin', '/usr/lib/python312.zip', '/usr/lib/python3.12', '/usr/lib/python3.12/lib-dynload', '/usr/lib/python3.12/site-packages']
14:49:57.265 [MainThread] INFO    thonny: sys.flags: sys.flags(debug=0, inspect=0, interactive=0, optimize=0, dont_write_bytecode=0, no_user_site=0, no_site=0, ignore_environment=0, verbose=0, bytes_warning=0, quiet=0, hash_randomization=1, isolated=0, dev_mode=False, utf8_mode=0, warn_default_encoding=0, safe_path=False, int_max_str_digits=4300)
14:49:57.310 [MainThread] INFO    thonny.workbench: Starting Workbench
14:49:57.340 [MainThread] INFO    thonny.workbench: Creating runner
14:49:57.342 [MainThread] INFO    thonny.workbench: Start loading plugins
14:49:57.389 [MainThread] INFO    thonny.workbench: Done loading plugins
14:49:57.531 [MainThread] INFO    thonny.workbench: Opening views
14:49:57.645 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': False, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
14:49:57.736 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
14:49:57.741 [MainThread] ERROR   thonny.plugins.micropython.mp_front: Could not get port info for '/dev/ttyACM0'
Traceback (most recent call last):
  File "/usr/lib/python3.12/site-packages/thonny/plugins/micropython/mp_front.py", line 346, in get_switcher_configuration_label
    p = get_port_info(port)
        ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/site-packages/thonny/plugins/micropython/mp_front.py", line 1065, in get_port_info
    raise RuntimeError("Port %s not found" % port)
RuntimeError: Port /dev/ttyACM0 not found
14:49:57.748 [Thread-2 (_listen_stdout)] INFO    thonny.running: Reader got EOF
14:49:57.859 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
14:49:59.768 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
14:49:59.782 [MainThread] INFO    thonny.misc_utils: Could not import dbus_next, falling back to mount command
14:50:07.628 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
14:50:07.642 [MainThread] INFO    thonny.misc_utils: Could not import dbus_next, falling back to mount command
14:50:08.422 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
14:50:08.490 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
14:50:08.490 [MainThread] INFO    thonny.ui_utils: Placing .!configurationdialog with geometry +1011+581
14:50:13.176 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': False, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
14:50:13.265 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
14:50:13.277 [Thread-4 (_listen_stdout)] INFO    thonny.running: Reader got EOF
14:50:13.280 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
14:50:13.285 [MainThread] ERROR   thonny.plugins.micropython.mp_front: Could not get port info for '/dev/ttyACM0'
Traceback (most recent call last):
  File "/usr/lib/python3.12/site-packages/thonny/plugins/micropython/mp_front.py", line 346, in get_switcher_configuration_label
    p = get_port_info(port)
        ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/site-packages/thonny/plugins/micropython/mp_front.py", line 1065, in get_port_info
    raise RuntimeError("Port %s not found" % port)
RuntimeError: Port /dev/ttyACM0 not found
14:50:13.390 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
14:51:19.291 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
14:51:19.309 [MainThread] INFO    thonny.misc_utils: Could not import dbus_next, falling back to mount command
14:51:20.492 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': False, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
14:51:20.579 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
14:51:20.593 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
14:51:26.752 [Thread-6 (_listen_stdout)] INFO    thonny.running: Reader got EOF
14:51:26.873 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
14:52:02.567 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
14:52:02.656 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
14:52:02.670 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
14:52:41.252 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
14:52:41.252 [MainThread] INFO    thonny.ui_utils: Placing .!inlinecommanddialog with geometry +1129+789
14:52:43.358 [MainThread] INFO    thonny: TIME/MODS 166.095 Before Run (+204 modules)
14:52:43.359 [MainThread] INFO    thonny: NEW MODS ['__future__', '_bisect', '_blake2', '_bz2', '_compression', '_datetime', '_hashlib', '_heapq', '_locale', '_lzma', '_posixsubprocess', '_queue', '_random', '_sha2', '_socket', '_ssl', '_struct', '_tkinter', 'array', 'base64', 'binascii', 'bisect', 'bz2', 'calendar', 'configparser', 'datetime', 'email', 'email._encoded_words', 'email._parseaddr', 'email._policybase', 'email.base64mime', 'email.charset', 'email.encoders', 'email.errors', 'email.feedparser', 'email.header', 'email.iterators', 'email.message', 'email.parser', 'email.quoprimime', 'email.utils', 'encodings.ascii', 'errno', 'faulthandler', 'fcntl', 'fnmatch', 'gettext', 'glob', 'hashlib', 'heapq', 'http', 'http.client', 'importlib._abc', 'importlib.util', 'ipaddress', 'locale', 'lzma', 'math', 'ntpath', 'pathlib', 'pkgutil', 'platform', 'queue', 'quopri', 'random', 'runpy', 'select', 'selectors', 'serial', 'serial.serialposix', 'serial.serialutil', 'serial.tools', 'serial.tools.list_ports', 'serial.tools.list_ports_common', 'serial.tools.list_ports_linux', 'serial.tools.list_ports_posix', 'shlex', 'shutil', 'signal', 'socket', 'ssl', 'struct', 'subprocess', 'tempfile', 'termios', 'thonny.assistance', 'thonny.ast_utils', 'thonny.backend', 'thonny.base_file_browser', 'thonny.codeview', 'thonny.config', 'thonny.config_ui', 'thonny.editor_helpers', 'thonny.editors', 'thonny.languages', 'thonny.memory', 'thonny.misc_utils', 'thonny.plugins', 'thonny.plugins.about', 'thonny.plugins.assistant_config_page', 'thonny.plugins.ast_view', 'thonny.plugins.autocomplete', 'thonny.plugins.backend', 'thonny.plugins.backend_config_page', 'thonny.plugins.base_syntax_themes', 'thonny.plugins.base_ui_themes', 'thonny.plugins.birdseye_frontend', 'thonny.plugins.calltip', 'thonny.plugins.cells', 'thonny.plugins.circuitpython', 'thonny.plugins.circuitpython.cirpy_front', 'thonny.plugins.clean_ui_themes', 'thonny.plugins.coloring', 'thonny.plugins.commenting_indenting', 'thonny.plugins.common_editing_commands', 'thonny.plugins.cpython_backend', 'thonny.plugins.cpython_backend.cp_back', 'thonny.plugins.cpython_frontend', 'thonny.plugins.cpython_frontend.cp_front', 'thonny.plugins.cpython_ssh', 'thonny.plugins.cpython_ssh.cps_front', 'thonny.plugins.debugger', 'thonny.plugins.dock_user_windows_frontend', 'thonny.plugins.editor_config_page', 'thonny.plugins.esp', 'thonny.plugins.ev3', 'thonny.plugins.event_logging', 'thonny.plugins.event_view', 'thonny.plugins.files', 'thonny.plugins.find_replace', 'thonny.plugins.general_config_page', 'thonny.plugins.goto_definition', 'thonny.plugins.heap', 'thonny.plugins.help', 'thonny.plugins.highlight_names', 'thonny.plugins.locals_marker', 'thonny.plugins.microbit', 'thonny.plugins.micropython', 'thonny.plugins.micropython.bare_metal_backend', 'thonny.plugins.micropython.base_flashing_dialog', 'thonny.plugins.micropython.connection', 'thonny.plugins.micropython.esptool_dialog', 'thonny.plugins.micropython.mp_back', 'thonny.plugins.micropython.mp_common', 'thonny.plugins.micropython.mp_front', 'thonny.plugins.micropython.uf2dialog', 'thonny.plugins.micropython.webrepl_connection', 'thonny.plugins.misc_analyzers', 'thonny.plugins.mypy', 'thonny.plugins.notes', 'thonny.plugins.object_inspector', 'thonny.plugins.outline', 'thonny.plugins.paren_matcher', 'thonny.plugins.pgzero_frontend', 'thonny.plugins.pi', 'thonny.plugins.pip_gui', 'thonny.plugins.prime_inventor', 'thonny.plugins.printing', 'thonny.plugins.pylint', 'thonny.plugins.pylint.messages', 'thonny.plugins.pythontutor', 'thonny.plugins.remove_old_data_dir', 'thonny.plugins.replayer', 'thonny.plugins.rp2040', 'thonny.plugins.rp2040.rp2040_back', 'thonny.plugins.rpi_pico', 'thonny.plugins.run_debug_config_page', 'thonny.plugins.shell_config_page', 'thonny.plugins.shell_macro', 'thonny.plugins.statement_boxes', 'thonny.plugins.stdlib_error_helpers', 'thonny.plugins.system_shell', 'thonny.plugins.terminal_config_page', 'thonny.plugins.theme_and_font_config_page', 'thonny.plugins.thonny_folders', 'thonny.plugins.todo_view', 'thonny.plugins.tomorrow_syntax_theme', 'thonny.plugins.variables', 'thonny.roughparse', 'thonny.rst_utils', 'thonny.running', 'thonny.shell', 'thonny.terminal', 'thonny.tktextext', 'thonny.token_utils', 'thonny.ui_utils', 'thonny.workbench', 'thonny.workdlg', 'tkinter', 'tkinter.commondialog', 'tkinter.constants', 'tkinter.dialog', 'tkinter.filedialog', 'tkinter.font', 'tkinter.messagebox', 'tkinter.simpledialog', 'tkinter.ttk', 'urllib', 'urllib.error', 'urllib.parse', 'urllib.request', 'urllib.response', 'webbrowser', 'zlib']
14:52:43.363 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source="from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\nwhile True: # 50 ms周期（=20 Hz）でデータ取得．\n    ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n    x_acc, y_acc, z_acc = s.get_acc_data('phy') # 物理値取得\n    x_gyr, y_gyr, z_gyr = s.get_gyro_data('raw') # 生データ取得\n    t = s.get_temperature_data()\n    print(x_acc, y_acc, z_acc, x_gyr, y_gyr, z_gyr, t)\n    ticks_fin = time.ticks_ms()\n    time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\n", name='Run', argv=[], id='cmd_7', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
14:52:43.364 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
14:52:43.371 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
14:53:05.569 [MainThread] INFO    thonny.running: Killing backend process
14:53:05.575 [Thread-8 (_listen_stdout)] INFO    thonny.running: Reader got EOF
14:53:05.669 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
14:53:05.687 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
14:53:05.769 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
14:53:05.786 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
14:59:03.246 [MainThread] INFO    thonny: TIME/MODS 379.875 Before Run 
14:59:03.253 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("./gyro.csv", "wb") as f:\n        f.write(b"x_acc,y_acc,z_acc,x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{x_gyr},{y_gyr},{z_gyr},{t}".encode("utf-8")\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    saveData(lines)', name='Run', argv=[], id='cmd_231', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
14:59:03.253 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
14:59:03.260 [MainThread] INFO    thonny: TIME/MODS 0.015 After Run 
14:59:18.493 [MainThread] INFO    thonny.running: Killing backend process
14:59:18.500 [Thread-10 (_listen_stdout)] INFO    thonny.running: Reader got EOF
14:59:18.594 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
14:59:18.611 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
14:59:18.692 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
14:59:18.707 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:00:11.347 [MainThread] INFO    thonny: TIME/MODS 68.087 Before Run 
15:00:11.353 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_acc,y_acc,z_acc,x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{x_gyr},{y_gyr},{z_gyr},{t}".encode("utf-8")\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    saveData(lines)', name='Run', argv=[], id='cmd_257', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:00:11.354 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:00:11.360 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
15:00:13.712 [MainThread] INFO    thonny.running: Killing backend process
15:00:13.718 [Thread-12 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:00:13.812 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:00:13.832 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:00:13.913 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:00:13.928 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:00:43.124 [MainThread] INFO    thonny: TIME/MODS 31.764 Before Run 
15:00:43.129 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_acc,y_acc,z_acc,x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{x_gyr},{y_gyr},{z_gyr},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    saveData(lines)', name='Run', argv=[], id='cmd_264', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:00:43.129 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:00:43.137 [MainThread] INFO    thonny: TIME/MODS 0.012 After Run 
15:01:02.718 [MainThread] INFO    thonny.running: Killing backend process
15:01:02.728 [Thread-14 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:01:02.819 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:01:02.837 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:01:02.921 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:01:02.936 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:01:25.704 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
15:01:25.705 [MainThread] INFO    thonny.ui_utils: Placing .!nodechoicedialog with geometry +1813+753
15:01:37.635 [MainThread] INFO    thonny.ui_utils: Restoring focus to .
15:01:37.636 [MainThread] INFO    thonny.editors: Save dialog returned '/home/uPiscium/Documents/University/B2-3rd/Ex1A/07/IMURecorder' with typevariable ''
15:01:42.355 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
15:01:42.355 [MainThread] INFO    thonny.ui_utils: Placing .!querydialog with geometry +1827+782
15:02:26.821 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
15:02:26.822 [MainThread] INFO    thonny.ui_utils: Placing .!querydialog2 with geometry +1827+782
15:03:20.182 [MainThread] INFO    thonny: TIME/MODS 157.045 Before Run (+71 modules)
15:03:20.182 [MainThread] INFO    thonny: NEW MODS ['_asyncio', '_contextvars', 'asyncio', 'asyncio.base_events', 'asyncio.base_futures', 'asyncio.base_subprocess', 'asyncio.base_tasks', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.events', 'asyncio.exceptions', 'asyncio.format_helpers', 'asyncio.futures', 'asyncio.locks', 'asyncio.log', 'asyncio.mixins', 'asyncio.protocols', 'asyncio.queues', 'asyncio.runners', 'asyncio.selector_events', 'asyncio.sslproto', 'asyncio.staggered', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.taskgroups', 'asyncio.tasks', 'asyncio.threads', 'asyncio.timeouts', 'asyncio.transports', 'asyncio.trsock', 'asyncio.unix_events', 'cairo', 'cairo._cairo', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'contextvars', 'gi', 'gi._constants', 'gi._error', 'gi._gi', 'gi._gi_cairo', 'gi._gobject', 'gi._option', 'gi._ossighelper', 'gi._propertyhelper', 'gi._signalhelper', 'gi.docstring', 'gi.importer', 'gi.module', 'gi.overrides', 'gi.overrides.GLib', 'gi.overrides.GObject', 'gi.overrides.Gio', 'gi.repository', 'gi.repository.GLib', 'gi.repository.GModule', 'gi.repository.GObject', 'gi.repository.Gio', 'gi.types', 'gio', 'glib', 'gobject', 'gtk', 'gtk.gdk', 'optparse', 'send2trash', 'send2trash.compat', 'send2trash.exceptions', 'send2trash.plat_gio', 'send2trash.util']
15:03:20.187 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_acc,y_acc,z_acc,x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{x_gyr},{y_gyr},{z_gyr},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    saveData(lines)', name='Run', argv=[], id='cmd_276', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:03:20.188 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:03:20.194 [MainThread] INFO    thonny: TIME/MODS 0.012 After Run 
15:03:33.383 [MainThread] INFO    thonny.running: Killing backend process
15:03:33.389 [Thread-16 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:03:33.483 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:03:33.500 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:03:33.580 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:03:33.595 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:04:36.679 [MainThread] INFO    thonny: TIME/MODS 76.485 Before Run 
15:04:36.686 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_acc,y_acc,z_acc,x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{x_gyr},{y_gyr},{z_gyr},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    saveData(lines)', name='Run', argv=[], id='cmd_286', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:04:36.686 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:04:36.695 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
15:04:48.496 [MainThread] INFO    thonny.running: Killing backend process
15:04:48.504 [Thread-18 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:04:48.597 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:04:48.613 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:04:48.694 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:04:48.708 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:05:09.954 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
15:05:09.955 [MainThread] INFO    thonny.ui_utils: Placing .!querydialog3 with geometry +1827+782
15:06:42.121 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
15:06:42.122 [MainThread] INFO    thonny.ui_utils: Placing .!querydialog4 with geometry +1827+782
15:06:59.759 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:07:52.855 [MainThread] INFO    thonny: TIME/MODS 196.160 Before Run 
15:07:52.860 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_acc,y_acc,z_acc,x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{x_gyr},{y_gyr},{z_gyr},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    saveData(lines)', name='Run', argv=[], id='cmd_304', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:07:52.860 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:07:52.867 [MainThread] INFO    thonny: TIME/MODS 0.012 After Run 
15:08:04.955 [MainThread] INFO    thonny.running: Killing backend process
15:08:04.961 [Thread-20 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:08:05.055 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:08:05.073 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:08:05.161 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:08:05.176 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:08:47.978 [MainThread] INFO    thonny: TIME/MODS 55.110 Before Run 
15:08:47.984 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_acc,y_acc,z_acc,x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{x_gyr},{y_gyr},{z_gyr},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    saveData(lines)', name='Run', argv=[], id='cmd_307', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:08:47.984 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:08:47.992 [MainThread] INFO    thonny: TIME/MODS 0.015 After Run 
15:09:06.157 [MainThread] INFO    thonny.running: Killing backend process
15:09:06.161 [Thread-22 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:09:06.257 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:09:06.277 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:09:06.361 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:09:06.376 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:09:36.728 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
15:09:36.728 [MainThread] INFO    thonny.ui_utils: Placing .!querydialog5 with geometry +1827+782
15:12:57.730 [MainThread] INFO    thonny: TIME/MODS 249.737 Before Run 
15:12:57.735 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_acc,y_acc,z_acc,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    saveData(lines)', name='Run', argv=[], id='cmd_329', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:12:57.736 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:12:57.743 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
15:13:16.459 [MainThread] INFO    thonny.running: Killing backend process
15:13:16.466 [Thread-24 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:13:16.560 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:13:16.577 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:13:16.658 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:13:16.673 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:14:57.843 [MainThread] INFO    thonny: TIME/MODS 120.100 Before Run 
15:14:57.850 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_acc,y_acc,z_acc,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    saveData(lines)', name='Run', argv=[], id='cmd_334', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:14:57.850 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:14:57.858 [MainThread] INFO    thonny: TIME/MODS 0.015 After Run 
15:15:10.621 [MainThread] INFO    thonny.running: Killing backend process
15:15:10.629 [Thread-26 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:15:10.722 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:15:10.739 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:15:10.828 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:15:10.847 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:16:23.476 [MainThread] INFO    thonny: TIME/MODS 85.618 Before Run 
15:16:23.482 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_acc,y_acc,z_acc,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    saveData(lines)', name='Run', argv=[], id='cmd_337', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:16:23.482 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:16:23.490 [MainThread] INFO    thonny: TIME/MODS 0.014 After Run 
15:16:40.098 [MainThread] INFO    thonny.running: Killing backend process
15:16:40.105 [Thread-28 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:16:40.198 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:16:40.218 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:16:40.313 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:16:40.331 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:19:04.419 [MainThread] INFO    thonny: TIME/MODS 160.928 Before Run 
15:19:04.424 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_acc,y_acc,z_acc,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    saveData(lines)', name='Run', argv=[], id='cmd_340', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:19:04.425 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:19:04.431 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
15:19:11.067 [MainThread] INFO    thonny.running: Killing backend process
15:19:11.072 [Thread-30 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:19:11.167 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:19:11.182 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:19:11.268 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:19:11.283 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:19:37.418 [MainThread] INFO    thonny: TIME/MODS 32.986 Before Run 
15:19:37.423 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_acc,y_acc,z_acc,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    saveData(lines)', name='Run', argv=[], id='cmd_343', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:19:37.423 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:19:37.431 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
15:19:47.688 [MainThread] INFO    thonny.running: Killing backend process
15:19:47.694 [Thread-32 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:19:47.789 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:19:47.806 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:19:47.890 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:19:47.905 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:19:49.060 [MainThread] INFO    thonny: TIME/MODS 11.629 Before Run 
15:19:49.065 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_acc,y_acc,z_acc,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    saveData(lines)', name='Run', argv=[], id='cmd_346', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:19:49.066 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:19:49.074 [MainThread] INFO    thonny: TIME/MODS 0.014 After Run 
15:19:55.367 [MainThread] INFO    thonny.running: Killing backend process
15:19:55.375 [Thread-34 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:19:55.467 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:19:55.485 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:19:55.568 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:19:55.583 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:20:36.171 [MainThread] INFO    thonny: TIME/MODS 47.097 Before Run 
15:20:36.176 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_acc,y_acc,z_acc,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    saveData(lines)', name='Run', argv=[], id='cmd_349', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:20:36.177 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:20:36.184 [MainThread] INFO    thonny: TIME/MODS 0.014 After Run 
15:20:43.729 [MainThread] INFO    thonny.running: Killing backend process
15:20:43.737 [Thread-36 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:20:43.830 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:20:43.847 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:20:43.930 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:20:43.946 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:22:07.964 [MainThread] INFO    thonny: TIME/MODS 91.780 Before Run 
15:22:07.969 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_acc,y_acc,z_acc,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    saveData(lines)', name='Run', argv=[], id='cmd_353', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:22:07.970 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:22:07.977 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
15:22:14.665 [MainThread] INFO    thonny.running: Killing backend process
15:22:14.670 [Thread-38 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:22:14.766 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:22:14.787 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:22:14.873 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:22:14.890 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:22:59.025 [MainThread] INFO    thonny: TIME/MODS 51.048 Before Run 
15:22:59.032 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_acc,y_acc,z_acc,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    saveData(lines)', name='Run', argv=[], id='cmd_356', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:22:59.033 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:22:59.041 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
15:23:07.252 [MainThread] INFO    thonny.running: Killing backend process
15:23:07.260 [Thread-40 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:23:07.353 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:23:07.369 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:23:07.453 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:23:07.469 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:23:35.913 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
15:23:35.913 [MainThread] INFO    thonny.ui_utils: Placing .!inlinecommanddialog2 with geometry +1130+789
15:23:38.566 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
15:23:38.566 [MainThread] INFO    thonny.ui_utils: Placing .!inlinecommanddialog3 with geometry +1130+789
15:24:09.190 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
15:24:09.190 [MainThread] INFO    thonny.ui_utils: Placing .!inlinecommanddialog4 with geometry +1130+789
15:28:56.273 [MainThread] INFO    thonny: TIME/MODS 357.231 Before Run 
15:28:56.278 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_gyro_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n    #saveData(lines)', name='Run', argv=[], id='cmd_411', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:28:56.278 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:28:56.285 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
15:29:07.116 [MainThread] INFO    thonny.running: Killing backend process
15:29:07.124 [Thread-42 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:29:07.217 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:29:07.236 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:29:07.319 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:29:07.335 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:29:53.469 [MainThread] INFO    thonny: TIME/MODS 57.184 Before Run 
15:29:53.474 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_gyro_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n    #saveData(lines)', name='Run', argv=[], id='cmd_414', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:29:53.475 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:29:53.482 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
15:29:59.678 [MainThread] INFO    thonny.running: Killing backend process
15:29:59.684 [Thread-44 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:29:59.778 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:29:59.795 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:29:59.882 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:29:59.897 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:31:01.522 [MainThread] INFO    thonny: TIME/MODS 68.040 Before Run 
15:31:01.527 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_gyro_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n    #saveData(lines)', name='Run', argv=[], id='cmd_417', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:31:01.528 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:31:01.534 [MainThread] INFO    thonny: TIME/MODS 0.012 After Run 
15:31:11.367 [MainThread] INFO    thonny.running: Killing backend process
15:31:11.373 [Thread-46 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:31:11.468 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:31:11.486 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:31:11.572 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:31:11.587 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:31:42.335 [MainThread] INFO    thonny: TIME/MODS 40.800 Before Run 
15:31:42.340 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_gyro_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n    #saveData(lines)', name='Run', argv=[], id='cmd_420', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:31:42.340 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:31:42.348 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
15:31:48.832 [MainThread] INFO    thonny.running: Killing backend process
15:31:48.838 [Thread-48 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:31:48.933 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:31:48.950 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:31:49.035 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:31:49.049 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:32:33.636 [MainThread] INFO    thonny: TIME/MODS 51.288 Before Run 
15:32:33.641 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_gyro_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n    #saveData(lines)', name='Run', argv=[], id='cmd_423', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:32:33.642 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:32:33.649 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
15:32:43.973 [MainThread] INFO    thonny.running: Killing backend process
15:32:43.979 [Thread-50 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:32:44.074 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:32:44.095 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:32:44.180 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:32:44.195 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:33:06.471 [MainThread] INFO    thonny: TIME/MODS 32.822 Before Run 
15:33:06.476 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_gyro_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n    #saveData(lines)', name='Run', argv=[], id='cmd_426', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:33:06.477 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:33:06.484 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
15:33:12.801 [MainThread] INFO    thonny.running: Killing backend process
15:33:12.807 [Thread-52 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:33:12.901 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:33:12.919 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:33:13.002 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:33:13.018 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:33:54.676 [MainThread] INFO    thonny: TIME/MODS 48.192 Before Run 
15:33:54.681 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_gyro_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n    #saveData(lines)', name='Run', argv=[], id='cmd_429', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:33:54.682 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:33:54.689 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
15:34:01.851 [MainThread] INFO    thonny.running: Killing backend process
15:34:01.858 [Thread-54 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:34:01.952 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:34:01.969 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:34:02.052 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:34:02.066 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:40:05.143 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
15:40:05.143 [MainThread] INFO    thonny.ui_utils: Placing .!querydialog6 with geometry +1187+782
15:40:21.941 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
15:40:21.942 [MainThread] INFO    thonny.ui_utils: Placing .!querydialog7 with geometry +1187+782
15:45:06.297 [MainThread] INFO    thonny: TIME/MODS 671.608 Before Run 
15:45:06.303 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_gyro_data("phy")  # 物理値取得\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n\n', name='Run', argv=[], id='cmd_444', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:45:06.304 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:45:06.312 [MainThread] INFO    thonny: TIME/MODS 0.015 After Run 
15:45:13.326 [MainThread] INFO    thonny: TIME/MODS 7.014 Before Run 
15:45:13.326 [MainThread] INFO    thonny.running: Trying to execute current but runner is 'running'
15:45:13.506 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_gyro_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc},{y_acc},{z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n    #saveData(lines)', name='Run', argv=[], id='cmd_446', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:45:13.507 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:45:13.517 [MainThread] INFO    thonny: TIME/MODS 0.191 After Run 
15:45:32.027 [MainThread] INFO    thonny.running: Killing backend process
15:45:32.035 [Thread-56 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:45:32.128 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:45:32.147 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:45:32.246 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:45:32.261 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:46:10.772 [MainThread] INFO    thonny: TIME/MODS 57.255 Before Run 
15:46:10.782 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{.4f:x_acc},{.4f:y_acc},{.4f:z_acc},{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n    #saveData(lines)', name='Run', argv=[], id='cmd_471', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:46:10.783 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:46:10.790 [MainThread] INFO    thonny: TIME/MODS 0.017 After Run 
15:46:41.663 [MainThread] INFO    thonny: TIME/MODS 30.874 Before Run 
15:46:41.672 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        t = s.get_temperature_data()\n    \n        line = f"{x_acc}:.4f,{y_acc}:.4f,{z_acc}:.4f,{t}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n    #saveData(lines)', name='Run', argv=[], id='cmd_497', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:46:41.672 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:46:41.679 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
15:46:45.153 [MainThread] INFO    thonny.running: Killing backend process
15:46:45.161 [Thread-58 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:46:45.253 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:46:45.273 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:46:45.358 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:46:45.376 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:48:45.537 [MainThread] INFO    thonny: TIME/MODS 123.858 Before Run 
15:48:45.541 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        #t = s.get_temperature_data()\n    \n        line = f"{x_acc.4f},{y_acc:.4f},{z_acc:.4f}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n    #saveData(lines)', name='Run', argv=[], id='cmd_521', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:48:45.542 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:48:45.549 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
15:49:20.757 [MainThread] INFO    thonny: TIME/MODS 35.208 Before Run 
15:49:20.763 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        #t = s.get_temperature_data()\n    \n        line = f"{x_acc:.4f},{y_acc:.4f},{z_acc:.4f}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n    #saveData(lines)', name='Run', argv=[], id='cmd_527', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:49:20.764 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:49:20.774 [MainThread] INFO    thonny: TIME/MODS 0.017 After Run 
15:49:43.807 [MainThread] INFO    thonny.running: Killing backend process
15:49:43.815 [Thread-60 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:49:43.908 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:49:43.928 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:49:44.012 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:49:44.028 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:50:51.138 [MainThread] INFO    thonny: TIME/MODS 90.364 Before Run 
15:50:51.143 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        #t = s.get_temperature_data()\n    \n        line = f"{x_acc:.4f},{y_acc:.4f},{z_acc:.4f}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n    #saveData(lines)', name='Run', argv=[], id='cmd_530', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:50:51.144 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:50:51.151 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
15:50:58.899 [MainThread] INFO    thonny.running: Killing backend process
15:50:58.906 [Thread-62 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:50:59.000 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:50:59.019 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:50:59.103 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:50:59.117 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:52:17.477 [MainThread] INFO    thonny: TIME/MODS 86.326 Before Run 
15:52:17.482 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        #t = s.get_temperature_data()\n    \n        line = f"{x_acc:.4f},{y_acc:.4f},{z_acc:.4f}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n    #saveData(lines)', name='Run', argv=[], id='cmd_534', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:52:17.482 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:52:17.489 [MainThread] INFO    thonny: TIME/MODS 0.012 After Run 
15:52:20.656 [MainThread] INFO    thonny.running: Killing backend process
15:52:20.663 [Thread-64 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:52:20.757 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:52:20.774 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:52:20.857 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:52:20.872 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:58:51.025 [MainThread] INFO    thonny: TIME/MODS 393.536 Before Run 
15:58:51.030 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(2)\nG = m.Pin(3)\nB = m.Pin(4)\n\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.9:\n        r = 1.0\n\n    if x_acc < -0.9:\n        b = 1.0\n\n    if x_acc > 0.9:\n        g = 1.0\n\n    if y_acc < -0.9:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\n\ntry:\n    R.freq(1000)\n    G.freq(1000)\n    B.freq(1000)\n\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        R.value(int(r))\n        G.value(int(g))\n        B.value(int(b))\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n\n', name='Run', argv=[], id='cmd_543', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:58:51.031 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:58:51.037 [MainThread] INFO    thonny: TIME/MODS 0.012 After Run 
15:59:07.197 [MainThread] INFO    thonny: TIME/MODS 16.159 Before Run 
15:59:07.201 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(2)\nG = m.Pin(3)\nB = m.Pin(4)\n\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.9:\n        r = 1.0\n\n    if x_acc < -0.9:\n        b = 1.0\n\n    if x_acc > 0.9:\n        g = 1.0\n\n    if y_acc < -0.9:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        R.value(int(r))\n        G.value(int(g))\n        B.value(int(b))\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n\n', name='Run', argv=[], id='cmd_546', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
15:59:07.202 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
15:59:07.210 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
15:59:40.991 [MainThread] INFO    thonny.running: Killing backend process
15:59:40.998 [Thread-66 (_listen_stdout)] INFO    thonny.running: Reader got EOF
15:59:41.091 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
15:59:41.112 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
15:59:41.203 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
15:59:41.219 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:00:02.838 [MainThread] INFO    thonny: TIME/MODS 55.628 Before Run 
16:00:02.844 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(2)\nG = m.Pin(3)\nB = m.Pin(4)\n\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.9:\n        r = 1.0\n\n    if x_acc < -0.9:\n        b = 1.0\n\n    if x_acc > 0.9:\n        g = 1.0\n\n    if y_acc < -0.9:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        #R.value(int(r))\n        #G.value(int(g))\n        #B.value(int(b))\n        R.value(1)\n        G.value(1)\n        B.value(1)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n\n', name='Run', argv=[], id='cmd_566', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:00:02.845 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:00:02.853 [MainThread] INFO    thonny: TIME/MODS 0.015 After Run 
16:00:07.889 [MainThread] INFO    thonny.running: Killing backend process
16:00:07.897 [Thread-68 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:00:07.989 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:00:08.007 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:00:08.087 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:00:08.102 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:00:54.718 [MainThread] INFO    thonny.running: Killing backend process
16:00:54.724 [Thread-70 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:00:54.819 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:00:54.838 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:00:54.922 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:00:54.936 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:01:18.735 [MainThread] INFO    thonny: TIME/MODS 75.882 Before Run 
16:01:18.741 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(2)\nG = m.Pin(3)\nB = m.Pin(4)\n\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.9:\n        r = 1.0\n\n    if x_acc < -0.9:\n        b = 1.0\n\n    if x_acc > 0.9:\n        g = 1.0\n\n    if y_acc < -0.9:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        #R.value(int(r))\n        #G.value(int(g))\n        #B.value(int(b))\n        R.value(1)\n        G.value(1)\n        B.value(1)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n\n', name='Run', argv=[], id='cmd_571', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:01:18.742 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:01:18.752 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
16:01:27.608 [MainThread] INFO    thonny.running: Killing backend process
16:01:27.615 [Thread-72 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:01:27.708 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:01:27.727 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:01:27.811 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:01:27.826 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:01:58.717 [MainThread] INFO    thonny: TIME/MODS 39.965 Before Run 
16:01:58.721 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(2, m.Pin.OUT)\nG = m.Pin(3, m.Pin.OUT)\nB = m.Pin(4, m.Pin.OUT)\n\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.9:\n        r = 1.0\n\n    if x_acc < -0.9:\n        b = 1.0\n\n    if x_acc > 0.9:\n        g = 1.0\n\n    if y_acc < -0.9:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        #R.value(int(r))\n        #G.value(int(g))\n        #B.value(int(b))\n        R.value(1)\n        G.value(1)\n        B.value(1)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n\n', name='Run', argv=[], id='cmd_592', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:01:58.722 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:01:58.730 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
16:02:09.195 [MainThread] INFO    thonny.running: Killing backend process
16:02:09.202 [Thread-74 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:02:09.296 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:02:09.316 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:02:09.399 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:02:09.413 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:02:43.349 [MainThread] INFO    thonny: TIME/MODS 44.619 Before Run 
16:02:43.353 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(4, m.Pin.OUT)\nG = m.Pin(5, m.Pin.OUT)\nB = m.Pin(6, m.Pin.OUT)\n\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.9:\n        r = 1.0\n\n    if x_acc < -0.9:\n        b = 1.0\n\n    if x_acc > 0.9:\n        g = 1.0\n\n    if y_acc < -0.9:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        #R.value(int(r))\n        #G.value(int(g))\n        #B.value(int(b))\n        R.value(1)\n        G.value(1)\n        B.value(1)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n\n', name='Run', argv=[], id='cmd_599', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:02:43.354 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:02:43.362 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
16:02:47.172 [MainThread] INFO    thonny.running: Killing backend process
16:02:47.179 [Thread-76 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:02:47.273 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:02:47.291 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:02:47.375 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:02:47.388 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:03:02.126 [MainThread] INFO    thonny.running: Killing backend process
16:03:02.132 [Thread-78 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:03:02.227 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:03:02.244 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:03:02.330 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:03:02.345 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:03:04.379 [MainThread] INFO    thonny.running: Killing backend process
16:03:04.384 [Thread-80 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:03:04.479 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:03:04.497 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:03:04.579 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:03:04.592 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:03:19.931 [MainThread] INFO    thonny: TIME/MODS 36.569 Before Run 
16:03:19.951 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(4, m.Pin.OUT)\nG = m.Pin(5, m.Pin.OUT)\nB = m.Pin(6, m.Pin.OUT)\n\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.9:\n        r = 1.0\n\n    if x_acc < -0.9:\n        b = 1.0\n\n    if x_acc > 0.9:\n        g = 1.0\n\n    if y_acc < -0.9:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        #R.value(int(r))\n        #G.value(int(g))\n        #B.value(int(b))\n        R.value(1)\n        G.value(1)\n        B.value(1)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    R.value(0)\n    G.value(0)\n    B.value(0)\n\n', name='Run', argv=[], id='cmd_618', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:03:19.952 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:03:19.959 [MainThread] INFO    thonny: TIME/MODS 0.028 After Run 
16:03:21.431 [MainThread] INFO    thonny.running: Killing backend process
16:03:21.441 [Thread-82 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:03:21.532 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:03:21.549 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:03:21.633 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:03:21.648 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:03:42.310 [MainThread] INFO    thonny.running: Killing backend process
16:03:42.317 [Thread-84 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:03:42.411 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:03:42.428 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:03:42.512 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:03:42.525 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:04:28.927 [MainThread] INFO    thonny: TIME/MODS 68.968 Before Run 
16:04:28.935 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(4, m.Pin.OUT)\nG = m.Pin(5, m.Pin.OUT)\nB = m.Pin(6, m.Pin.OUT)\n\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.9:\n        r = 1.0\n\n    if x_acc < -0.9:\n        b = 1.0\n\n    if x_acc > 0.9:\n        g = 1.0\n\n    if y_acc < -0.9:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.value(0)\n    G.value(0)\n    B.value(0)\n\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        R.value(int(r))\n        G.value(int(g))\n        B.value(int(b))\n        #R.value(1)\n        #G.value(1)\n        #B.value(1)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n', name='Run', argv=[], id='cmd_657', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:04:28.936 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:04:28.942 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
16:05:09.843 [MainThread] INFO    thonny.running: Killing backend process
16:05:09.850 [Thread-86 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:05:09.943 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:05:09.960 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:05:10.041 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:05:10.055 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:05:59.872 [MainThread] INFO    thonny: TIME/MODS 90.930 Before Run 
16:05:59.877 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(2, m.Pin.OUT)\nG = m.Pin(3, m.Pin.OUT)\nB = m.Pin(4, m.Pin.OUT)\n\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.6:\n        r = 1.0\n\n    if x_acc < -0.6:\n        b = 1.0\n\n    if x_acc > 0.6:\n        g = 1.0\n\n    if y_acc < -0.6:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.value(0)\n    G.value(0)\n    B.value(0)\n\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        R.value(int(r))\n        G.value(int(g))\n        B.value(int(b))\n        #R.value(1)\n        #G.value(1)\n        #B.value(1)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n', name='Run', argv=[], id='cmd_671', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:05:59.878 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:05:59.885 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
16:06:06.236 [MainThread] INFO    thonny.running: Killing backend process
16:06:06.243 [Thread-88 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:06:06.337 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:06:06.356 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:06:06.451 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:06:06.469 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:06:07.791 [MainThread] INFO    thonny: TIME/MODS 7.905 Before Run 
16:06:07.795 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(2, m.Pin.OUT)\nG = m.Pin(3, m.Pin.OUT)\nB = m.Pin(4, m.Pin.OUT)\n\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.6:\n        r = 1.0\n\n    if x_acc < -0.6:\n        b = 1.0\n\n    if x_acc > 0.6:\n        g = 1.0\n\n    if y_acc < -0.6:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.value(0)\n    G.value(0)\n    B.value(0)\n\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        R.value(int(r))\n        G.value(int(g))\n        B.value(int(b))\n        #R.value(1)\n        #G.value(1)\n        #B.value(1)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n', name='Run', argv=[], id='cmd_674', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:06:07.796 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:06:07.803 [MainThread] INFO    thonny: TIME/MODS 0.012 After Run 
16:09:47.021 [MainThread] INFO    thonny.running: Killing backend process
16:09:47.028 [Thread-90 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:09:47.122 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:09:47.141 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:09:47.230 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:09:47.245 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:09:49.998 [MainThread] INFO    thonny: TIME/MODS 222.195 Before Run 
16:09:50.003 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(2, m.Pin.OUT)\nG = m.Pin(3, m.Pin.OUT)\nB = m.Pin(4, m.Pin.OUT)\n\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.value(0)\n    G.value(0)\n    B.value(0)\n\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        R.value(int(r))\n        G.value(int(g))\n        B.value(int(b))\n        #R.value(1)\n        #G.value(1)\n        #B.value(1)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n', name='Run', argv=[], id='cmd_678', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:09:50.003 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:09:50.011 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
16:12:20.374 [MainThread] INFO    thonny.running: Killing backend process
16:12:20.382 [Thread-92 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:12:20.475 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:12:20.493 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:12:20.576 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:12:20.592 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:12:44.896 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
16:12:44.896 [MainThread] INFO    thonny.ui_utils: Placing .!querydialog8 with geometry +1187+782
16:23:02.098 [MainThread] INFO    thonny: TIME/MODS 792.087 Before Run 
16:23:02.105 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(2, m.Pin.OUT)\nG = m.Pin(3, m.Pin.OUT)\nB = m.Pin(4, m.Pin.OUT)\n\n\nRED = 1\nGREEN = 2\nBLUE = 3\nPURPLE = 4\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ChangeState(x_acc: float, y_acc: float, z_acc: float):\n    if y_acc > 0.5:\n        return RED\n\n    if x_acc < -0.5:\n        return BLUE\n\n    if x_acc > 0.5:\n        return GREEN\n\n    if y_acc < -0.5:\n        return PURPLE\n\n\ndef ResetColor():\n    R.value(0)\n    G.value(0)\n    B.value(0)\n\n        \ndef ChangeColor(state: int):\n    ResetColor()\n    if state == RED:\n        R.value(1)\n    elif state == GREEN:\n        G.value(1)\n    elif state == BLUE:\n        B.value(1)\n    elif staue == PURPLE:\n        R.value(1)\n        B.value(1)\n    else:\n        pass\n\n\n\ntry:\n    state = RED\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #R.value(1)\n        #G.value(1)\n        #B.value(1)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    ResetColor()\n\n\n', name='Run', argv=[], id='cmd_885', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:23:02.106 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:23:02.113 [MainThread] INFO    thonny: TIME/MODS 0.015 After Run 
16:23:09.928 [MainThread] INFO    thonny.running: Killing backend process
16:23:09.937 [Thread-94 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:23:10.029 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:23:10.047 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:23:10.130 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:23:10.146 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:24:04.940 [MainThread] INFO    thonny.running: Killing backend process
16:24:04.947 [Thread-96 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:24:05.041 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:24:05.058 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:24:05.139 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:24:05.152 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:24:08.100 [MainThread] INFO    thonny: TIME/MODS 65.987 Before Run 
16:24:08.104 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(2, m.Pin.OUT)\nG = m.Pin(3, m.Pin.OUT)\nB = m.Pin(4, m.Pin.OUT)\n\n\nRED = 1\nGREEN = 2\nBLUE = 3\nPURPLE = 4\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ChangeState(x_acc: float, y_acc: float, z_acc: float, state: int):\n    if y_acc > 0.5:\n        return RED\n\n    if x_acc < -0.5:\n        return BLUE\n\n    if x_acc > 0.5:\n        return GREEN\n\n    if y_acc < -0.5:\n        return PURPLE\n    \n    return state\n\n\ndef ResetColor():\n    R.value(0)\n    G.value(0)\n    B.value(0)\n\n        \ndef ChangeColor(state: int):\n    ResetColor()\n    if state == RED:\n        R.value(1)\n    elif state == GREEN:\n        G.value(1)\n    elif state == BLUE:\n        B.value(1)\n    elif staue == PURPLE:\n        R.value(1)\n        B.value(1)\n    else:\n        pass\n\n\n\ntry:\n    state = RED\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n        \n        state = ChangeState(x_acc, y_acc, z_acc, state)\n        ChangeColor(state)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    ResetColor()\n\n\n', name='Run', argv=[], id='cmd_919', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:24:08.105 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:24:08.112 [MainThread] INFO    thonny: TIME/MODS 0.012 After Run 
16:25:15.250 [MainThread] INFO    thonny: TIME/MODS 67.138 Before Run 
16:25:15.259 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(2, m.Pin.OUT)\nG = m.Pin(3, m.Pin.OUT)\nB = m.Pin(4, m.Pin.OUT)\n\n\nRED = 1\nGREEN = 2\nBLUE = 3\nPURPLE = 4\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ChangeState(x_acc: float, y_acc: float, z_acc: float, state: int):\n    if y_acc > 0.5:\n        return RED\n\n    if x_acc < -0.5:\n        return BLUE\n\n    if x_acc > 0.5:\n        return GREEN\n\n    if y_acc < -0.5:\n        return PURPLE\n    \n    return state\n\n\ndef ResetColor():\n    R.value(0)\n    G.value(0)\n    B.value(0)\n\n        \ndef ChangeColor(state: int):\n    ResetColor()\n    if state == RED:\n        R.value(1)\n    elif state == GREEN:\n        G.value(1)\n    elif state == BLUE:\n        B.value(1)\n    elif state == PURPLE:\n        R.value(1)\n        B.value(1)\n    else:\n        pass\n\n\n\ntry:\n    state = RED\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n        \n        state = ChangeState(x_acc, y_acc, z_acc, state)\n        ChangeColor(state)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    ResetColor()\n\n\n', name='Run', argv=[], id='cmd_923', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:25:15.259 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:25:15.265 [MainThread] INFO    thonny: TIME/MODS 0.015 After Run 
16:25:47.086 [MainThread] INFO    thonny.running: Killing backend process
16:25:47.094 [Thread-98 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:25:47.187 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:25:47.202 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:25:47.289 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:25:47.302 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:27:49.900 [MainThread] INFO    thonny: TIME/MODS 154.635 Before Run 
16:27:49.906 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(2, m.Pin.OUT)\nG = m.Pin(3, m.Pin.OUT)\nB = m.Pin(4, m.Pin.OUT)\n\n\nRED = 1\nGREEN = 2\nBLUE = 3\nPURPLE = 4\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ChangeState(x_acc: float, y_acc: float, z_acc: float, state: int):\n    if y_acc > 0.5:\n        return RED\n\n    if x_acc < -0.5:\n        return BLUE\n\n    if x_acc > 0.5:\n        return GREEN\n\n    if y_acc < -0.5:\n        return PURPLE\n    \n    return state\n\n\ndef ResetColor():\n    R.value(0)\n    G.value(0)\n    B.value(0)\n\n        \ndef ChangeColor(state: int):\n    ResetColor()\n    if state == RED:\n        R.value(1)\n    elif state == GREEN:\n        G.value(1)\n    elif state == BLUE:\n        B.value(1)\n    elif state == PURPLE:\n        R.value(1)\n        B.value(1)\n    else:\n        pass\n\n\n\ntry:\n    state = RED\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n        \n        state = ChangeState(x_acc, y_acc, z_acc, state)\n        ChangeColor(state)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    ResetColor()\n\n\n', name='Run', argv=[], id='cmd_926', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:27:49.907 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:27:49.914 [MainThread] INFO    thonny: TIME/MODS 0.014 After Run 
16:30:10.904 [MainThread] INFO    thonny.running: Killing backend process
16:30:10.911 [Thread-100 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:30:11.005 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:30:11.023 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:30:11.110 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:30:11.124 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:31:47.053 [MainThread] INFO    thonny: TIME/MODS 237.139 Before Run 
16:31:47.061 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(2, m.Pin.OUT)\nG = m.Pin(3, m.Pin.OUT)\nB = m.Pin(4, m.Pin.OUT)\n\n\nOFF = 0\nRED = 1\nGREEN = 2\nBLUE = 3\nPURPLE = 4\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ChangeState(x_acc: float, y_acc: float, z_acc: float, state: int):\n    if abs(x_acc) < 0.1 and abs(y_acc) < 0.1 and abs(z_acc) < 0.1:\n        return OFF\n    \n    if y_acc > 0.5:\n        return RED\n\n    if x_acc < -0.5:\n        return BLUE\n\n    if x_acc > 0.5:\n        return GREEN\n\n    if y_acc < -0.5:\n        return PURPLE\n    \n    return state\n\n\ndef ResetColor():\n    R.value(0)\n    G.value(0)\n    B.value(0)\n\n        \ndef ChangeColor(state: int):\n    ResetColor()\n    if state == RED:\n        R.value(1)\n    elif state == GREEN:\n        G.value(1)\n    elif state == BLUE:\n        B.value(1)\n    elif state == PURPLE:\n        R.value(1)\n        B.value(1)\n    else:\n        pass\n\n\n\ntry:\n    state = OFF\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n        \n        state = ChangeState(x_acc, y_acc, z_acc, state)\n        ChangeColor(state)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    ResetColor()\n\n\n', name='Run', argv=[], id='cmd_971', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:31:47.061 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:31:47.067 [MainThread] INFO    thonny: TIME/MODS 0.014 After Run 
16:31:59.037 [MainThread] INFO    thonny.running: Killing backend process
16:31:59.043 [Thread-102 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:31:59.137 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:31:59.157 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:31:59.257 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:31:59.276 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:32:15.960 [MainThread] INFO    thonny: TIME/MODS 28.893 Before Run 
16:32:15.964 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(2, m.Pin.OUT)\nG = m.Pin(3, m.Pin.OUT)\nB = m.Pin(4, m.Pin.OUT)\n\n\nOFF = 0\nRED = 1\nGREEN = 2\nBLUE = 3\nPURPLE = 4\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ChangeState(x_acc: float, y_acc: float, z_acc: float, state: int):\n    if abs(x_acc) < 0.2 and abs(y_acc) < 0.2 and abs(z_acc) < 0.2:\n        return OFF\n    \n    if y_acc > 0.5:\n        return RED\n\n    if x_acc < -0.5:\n        return BLUE\n\n    if x_acc > 0.5:\n        return GREEN\n\n    if y_acc < -0.5:\n        return PURPLE\n    \n    return state\n\n\ndef ResetColor():\n    R.value(0)\n    G.value(0)\n    B.value(0)\n\n        \ndef ChangeColor(state: int):\n    ResetColor()\n    if state == RED:\n        R.value(1)\n    elif state == GREEN:\n        G.value(1)\n    elif state == BLUE:\n        B.value(1)\n    elif state == PURPLE:\n        R.value(1)\n        B.value(1)\n    else:\n        pass\n\n\n\ntry:\n    state = OFF\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n        \n        state = ChangeState(x_acc, y_acc, z_acc, state)\n        ChangeColor(state)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    ResetColor()\n\n\n', name='Run', argv=[], id='cmd_982', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:32:15.965 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:32:15.973 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
16:32:35.911 [MainThread] INFO    thonny.running: Killing backend process
16:32:35.919 [Thread-104 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:32:36.012 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:32:36.029 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:32:36.115 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:32:36.131 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:32:42.028 [MainThread] INFO    thonny: TIME/MODS 26.056 Before Run 
16:32:42.033 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(2, m.Pin.OUT)\nG = m.Pin(3, m.Pin.OUT)\nB = m.Pin(4, m.Pin.OUT)\n\n\nOFF = 0\nRED = 1\nGREEN = 2\nBLUE = 3\nPURPLE = 4\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ChangeState(x_acc: float, y_acc: float, z_acc: float, state: int):\n    if abs(x_acc) < 0.2 and abs(y_acc) < 0.2:\n        return OFF\n    \n    if y_acc > 0.5:\n        return RED\n\n    if x_acc < -0.5:\n        return BLUE\n\n    if x_acc > 0.5:\n        return GREEN\n\n    if y_acc < -0.5:\n        return PURPLE\n    \n    return state\n\n\ndef ResetColor():\n    R.value(0)\n    G.value(0)\n    B.value(0)\n\n        \ndef ChangeColor(state: int):\n    ResetColor()\n    if state == RED:\n        R.value(1)\n    elif state == GREEN:\n        G.value(1)\n    elif state == BLUE:\n        B.value(1)\n    elif state == PURPLE:\n        R.value(1)\n        B.value(1)\n    else:\n        pass\n\n\n\ntry:\n    state = OFF\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n        \n        state = ChangeState(x_acc, y_acc, z_acc, state)\n        ChangeColor(state)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    ResetColor()\n\n\n', name='Run', argv=[], id='cmd_988', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:32:42.034 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:32:42.042 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
16:34:26.823 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
16:34:26.823 [MainThread] INFO    thonny.ui_utils: Placing .!querydialog9 with geometry +1827+782
16:35:05.301 [MainThread] INFO    thonny.running: Killing backend process
16:35:05.306 [Thread-106 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:35:05.401 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:35:05.418 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:35:05.503 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:35:05.517 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:35:41.067 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
16:35:41.068 [MainThread] INFO    thonny.ui_utils: Placing .!inlinecommanddialog5 with geometry +1769+789
16:38:03.807 [MainThread] INFO    thonny: TIME/MODS 321.765 Before Run 
16:38:03.811 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from machine import ADC\nimport time\n\nadc0 = ADC(0)  # ADC0 (=GP26 = pin31)\n\nwhile True:\n    st = time.ticks_ms() # 電源ONからの経過ミリ秒(開始)\n    v = adc0.read_u16()  # 16bit符号無し整数として読み取る．\n    print(v)\n    fin = time.ticks_ms() # 電源ONからの経過ミリ秒(終了)\n    elapsed_time = time.ticks_diff(fin, st) # 処理時間\n    time.sleep_ms(100-elapsed_time)  #（100-経過時間）ミリ秒待機\n', name='Run', argv=[], id='cmd_1003', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:38:03.812 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:38:03.819 [MainThread] INFO    thonny: TIME/MODS 0.012 After Run 
16:39:41.742 [MainThread] INFO    thonny.running: Killing backend process
16:39:41.747 [Thread-108 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:39:41.842 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:39:41.861 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:39:41.942 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:39:41.957 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:39:47.020 [MainThread] INFO    thonny: TIME/MODS 103.200 Before Run 
16:39:47.025 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from machine import ADC\nimport time\n\nadc0 = ADC(0)  # ADC0 (=GP26 = pin31)\n\nwhile True:\n    st = time.ticks_ms() # 電源ONからの経過ミリ秒(開始)\n    v = adc0.read_u16()  # 16bit符号無し整数として読み取る．\n    print(v)\n    fin = time.ticks_ms() # 電源ONからの経過ミリ秒(終了)\n    elapsed_time = time.ticks_diff(fin, st) # 処理時間\n    time.sleep_ms(10-elapsed_time)  #（100-経過時間）ミリ秒待機\n', name='Run', argv=[], id='cmd_1009', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:39:47.026 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:39:47.033 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
16:40:02.022 [MainThread] INFO    thonny.running: Killing backend process
16:40:02.028 [Thread-110 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:40:02.123 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:40:02.140 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:40:02.224 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:40:02.240 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:43:08.833 [MainThread] INFO    thonny: TIME/MODS 201.800 Before Run 
16:43:08.838 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.Pin(2, m.Pin.OUT)\nG = m.Pin(3, m.Pin.OUT)\nB = m.Pin(4, m.Pin.OUT)\n\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.value(0)\n    G.value(0)\n    B.value(0)\n\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        R.value(int(r))\n        G.value(int(g))\n        B.value(int(b))\n        #R.value(1)\n        #G.value(1)\n        #B.value(1)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1023', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:43:08.839 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:43:08.845 [MainThread] INFO    thonny: TIME/MODS 0.012 After Run 
16:45:32.496 [MainThread] INFO    thonny.running: Killing backend process
16:45:32.502 [Thread-112 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:45:32.597 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:45:32.614 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:45:32.698 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:45:32.712 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:49:54.866 [MainThread] INFO    thonny: TIME/MODS 406.021 Before Run 
16:49:54.875 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.value(0)\n    G.value(0)\n    B.value(0)\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.5 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        CandleLight(1.0)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1242', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:49:54.875 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:49:54.882 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
16:50:01.584 [MainThread] INFO    thonny.running: Killing backend process
16:50:01.592 [Thread-114 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:50:01.685 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:50:01.704 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:50:01.785 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:50:01.800 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:50:28.444 [MainThread] INFO    thonny: TIME/MODS 33.562 Before Run 
16:50:28.453 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.3 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        CandleLight(1.0)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1260', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:50:28.454 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:50:28.460 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
16:50:38.845 [MainThread] INFO    thonny.running: Killing backend process
16:50:38.853 [Thread-116 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:50:38.946 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:50:38.963 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:50:39.044 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:50:39.058 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:50:51.542 [MainThread] INFO    thonny: TIME/MODS 23.082 Before Run 
16:50:51.551 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.2 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        CandleLight(1.0)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1264', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:50:51.551 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:50:51.558 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
16:51:20.990 [MainThread] INFO    thonny.running: Killing backend process
16:51:20.997 [Thread-118 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:51:21.091 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:51:21.110 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:51:21.194 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:51:21.215 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:51:21.873 [MainThread] INFO    thonny: TIME/MODS 30.316 Before Run 
16:51:21.884 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.2 * strength\n    bf = 0.01 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        CandleLight(1.0)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1267', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:51:21.884 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:51:21.891 [MainThread] INFO    thonny: TIME/MODS 0.018 After Run 
16:51:25.422 [MainThread] INFO    thonny.running: Killing backend process
16:51:25.430 [Thread-120 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:51:25.522 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:51:25.541 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:51:25.628 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:51:25.644 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:51:28.884 [MainThread] INFO    thonny: TIME/MODS 6.993 Before Run 
16:51:28.895 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.2 * strength\n    bf = 0.05 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        CandleLight(1.0)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1271', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:51:28.895 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:51:28.902 [MainThread] INFO    thonny: TIME/MODS 0.018 After Run 
16:51:31.522 [MainThread] INFO    thonny.running: Killing backend process
16:51:31.528 [Thread-122 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:51:31.623 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:51:31.641 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:51:31.733 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:51:31.748 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:51:33.861 [MainThread] INFO    thonny: TIME/MODS 4.959 Before Run 
16:51:33.869 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.2 * strength\n    bf = 0.01 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        CandleLight(1.0)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1275', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:51:33.870 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:51:33.877 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
16:51:40.405 [MainThread] INFO    thonny.running: Killing backend process
16:51:40.411 [Thread-124 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:51:40.506 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:51:40.526 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:51:40.609 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:51:40.626 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:51:44.588 [MainThread] INFO    thonny: TIME/MODS 10.712 Before Run 
16:51:44.597 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        CandleLight(1.0)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1281', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:51:44.598 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:51:44.604 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
16:52:59.797 [MainThread] INFO    thonny.running: Killing backend process
16:52:59.804 [Thread-126 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:52:59.898 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:52:59.919 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:53:00.019 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:53:00.035 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:54:02.635 [MainThread] INFO    thonny.running: Killing backend process
16:54:02.641 [Thread-128 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:54:02.736 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:54:02.756 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:54:02.843 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:54:02.860 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:55:06.371 [MainThread] INFO    thonny: TIME/MODS 201.767 Before Run 
16:55:06.379 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise():\n    r = random.random()\n    return r\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        factor = GetNoise()\n        CandleLight(factor)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1319', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:55:06.379 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:55:06.386 [MainThread] INFO    thonny: TIME/MODS 0.015 After Run 
16:55:23.704 [MainThread] INFO    thonny.running: Killing backend process
16:55:23.713 [Thread-130 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:55:23.805 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:55:23.822 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:55:23.909 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:55:23.923 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:56:48.280 [MainThread] INFO    thonny: TIME/MODS 101.894 Before Run 
16:56:48.288 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random()\n    f += r * 0.1\n    f = 1.0 if f > 1.0 else f\n    return f\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        f = GetNoise()\n        CandleLight(factor)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1378', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:56:48.289 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:56:48.295 [MainThread] INFO    thonny: TIME/MODS 0.015 After Run 
16:56:55.145 [MainThread] INFO    thonny: TIME/MODS 6.850 Before Run 
16:56:55.152 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random()\n    f += r * 0.1\n    f = 1.0 if f > 1.0 else f\n    return f\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        f = GetNoise(f)\n        CandleLight(factor)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1382', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:56:55.152 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:56:55.158 [MainThread] INFO    thonny: TIME/MODS 0.014 After Run 
16:57:01.205 [MainThread] INFO    thonny: TIME/MODS 6.047 Before Run 
16:57:01.214 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random()\n    f += r * 0.1\n    f = 1.0 if f > 1.0 else f\n    return f\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        f = GetNoise(f)\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1387', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:57:01.215 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:57:01.221 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
16:57:10.848 [MainThread] INFO    thonny.running: Killing backend process
16:57:10.856 [Thread-132 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:57:10.949 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:57:10.966 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:57:11.045 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:57:11.060 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:57:20.557 [MainThread] INFO    thonny: TIME/MODS 19.336 Before Run 
16:57:20.567 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    f += r * 0.1\n    f = 1.0 if f > 1.0 else f\n    return f\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        f = GetNoise(f)\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1396', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:57:20.568 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:57:20.574 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
16:57:46.256 [MainThread] INFO    thonny.running: Killing backend process
16:57:46.262 [Thread-134 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:57:46.357 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:57:46.376 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:57:46.475 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:57:46.490 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:58:07.288 [MainThread] INFO    thonny: TIME/MODS 46.714 Before Run 
16:58:07.297 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    f += r * 0.1\n    f = 1.0 if f > 1.0 else f\n    f = 0.5 if f < 0.5 else f\n    return f\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        f = GetNoise(f)\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1412', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:58:07.297 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:58:07.304 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
16:58:20.960 [MainThread] INFO    thonny.running: Killing backend process
16:58:20.966 [Thread-136 (_listen_stdout)] INFO    thonny.running: Reader got EOF
16:58:21.061 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
16:58:21.081 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
16:58:21.181 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
16:58:21.196 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:58:30.252 [MainThread] INFO    thonny: TIME/MODS 22.948 Before Run 
16:58:30.261 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    f += r * 0.3\n    f = 1.0 if f > 1.0 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        f = GetNoise(f)\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1420', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
16:58:30.262 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
16:58:30.269 [MainThread] INFO    thonny: TIME/MODS 0.018 After Run 
17:00:40.733 [MainThread] INFO    thonny.running: Killing backend process
17:00:40.739 [Thread-138 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:00:40.834 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:00:40.851 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:00:40.945 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:00:40.961 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:01:34.842 [MainThread] INFO    thonny: TIME/MODS 184.573 Before Run 
17:01:34.852 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    f += r * 0.3\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        f = GetNoise(f)\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1430', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:01:34.852 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:01:34.858 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
17:05:32.322 [MainThread] INFO    thonny.running: Killing backend process
17:05:32.329 [Thread-140 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:05:32.422 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:05:32.440 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:05:32.525 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:05:32.541 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:06:10.687 [MainThread] INFO    thonny: TIME/MODS 275.829 Before Run 
17:06:10.695 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.02\n    else:\n        f -= 0.02\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        f = GetNoise(f)\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1468', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:06:10.696 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:06:10.702 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
17:06:37.502 [MainThread] INFO    thonny.running: Killing backend process
17:06:37.509 [Thread-142 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:06:37.603 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:06:37.623 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:06:37.708 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:06:37.723 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:06:50.974 [MainThread] INFO    thonny: TIME/MODS 40.272 Before Run 
17:06:50.982 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        f = GetNoise(f)\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1477', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:06:50.982 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:06:50.990 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
17:10:51.822 [MainThread] INFO    thonny.running: Killing backend process
17:10:51.828 [Thread-144 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:10:51.922 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:10:51.941 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:10:52.022 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:10:52.037 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:11:06.011 [MainThread] INFO    thonny: TIME/MODS 255.020 Before Run 
17:11:06.015 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        #t = s.get_temperature_data()\n    \n        line = f"{x_acc:.4f},{y_acc:.4f},{z_acc:.4f}"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n    #saveData(lines)', name='Run', argv=[], id='cmd_1480', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:11:06.016 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:11:06.025 [MainThread] INFO    thonny: TIME/MODS 0.014 After Run 
17:11:12.179 [MainThread] INFO    thonny.running: Killing backend process
17:11:12.186 [Thread-146 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:11:12.280 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:11:12.301 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:11:12.385 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:11:12.402 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:11:56.534 [MainThread] INFO    thonny: TIME/MODS 50.508 Before Run 
17:11:56.538 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from IMU import MPU60X0\nimport machine as m\nimport time\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\n\ndef saveData(lines: list[str]):\n    with open("~/Documents/University/B2-3rd/Ex1A/07/gyro.csv", "wb") as f:\n        f.write(b"x_gyr,y_gyr,z_gyr,t\\n")\n        f.writelines(lines)\n\nlines = []\n\ntry:\n    while True: # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms() # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = s.get_acc_data(\'phy\') # 物理値取得\n        #x_gyr, y_gyr, z_gyr = s.get_gyro_data(\'raw\') # 生データ取得\n        #t = s.get_temperature_data()\n    \n        line = f"{x_acc:.4f},{y_acc:.4f},{z_acc:.4f},0"\n        lines.append(line)\n        print(line)\n    \n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(50 - time.ticks_diff(ticks_fin, ticks_st)) # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    pass\n    #saveData(lines)', name='Run', argv=[], id='cmd_1489', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:11:56.539 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:11:56.547 [MainThread] INFO    thonny: TIME/MODS 0.014 After Run 
17:12:02.930 [MainThread] INFO    thonny.running: Killing backend process
17:12:02.937 [Thread-148 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:12:03.031 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:12:03.050 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:12:03.131 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:12:03.148 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:23:10.775 [MainThread] INFO    thonny: TIME/MODS 674.228 Before Run 
17:23:10.778 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\n\ndef CandleLight(strength: float):\n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        f = GetNoise(f)\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1492', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:23:10.778 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:23:10.783 [MainThread] INFO    thonny: TIME/MODS 0.008 After Run 
17:23:36.223 [MainThread] INFO    thonny.running: Killing backend process
17:23:36.230 [Thread-150 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:23:36.324 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:23:36.342 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:23:36.430 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:23:36.445 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:23:39.972 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
17:23:39.972 [MainThread] INFO    thonny.ui_utils: Placing .!inlinecommanddialog6 with geometry +1769+789
17:29:33.872 [MainThread] INFO    thonny: TIME/MODS 383.089 Before Run 
17:29:33.877 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='from machine import ADC\nimport time\n\nadc0 = ADC(0)  # ADC0 (=GP26 = pin31)\n\nwhile True:\n    st = time.ticks_ms() # 電源ONからの経過ミリ秒(開始)\n    v = adc0.read_u16()  # 16bit符号無し整数として読み取る．\n    print(v)\n    fin = time.ticks_ms() # 電源ONからの経過ミリ秒(終了)\n    elapsed_time = time.ticks_diff(fin, st) # 処理時間\n    time.sleep_ms(100-elapsed_time)  #（100-経過時間）ミリ秒待機\n', name='Run', argv=[], id='cmd_1497', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:29:33.877 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:29:33.886 [MainThread] INFO    thonny: TIME/MODS 0.014 After Run 
17:29:52.832 [MainThread] INFO    thonny.running: Killing backend process
17:29:52.839 [Thread-152 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:29:52.933 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:29:52.954 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:29:53.040 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:29:53.056 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:33:11.259 [MainThread] INFO    thonny: TIME/MODS 217.373 Before Run 
17:33:11.266 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\ns = MPU60X0(scl=m.Pin(13), sda=m.Pin(12))\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef GetAccData(sensor: MPU60X0):\n    x_acc, y_acc, z_acc = sensor.get_acc_data("phy")\n    return x_acc, y_acc, z_acc\n\n\ndef ConvertToRGB(x_acc: float, y_acc: float, z_acc: float):\n    r = 0.0\n    g = 0.0\n    b = 0.0\n\n    if y_acc > 0.5:\n        r = 1.0\n\n    if x_acc < -0.5:\n        b = 1.0\n\n    if x_acc > 0.5:\n        g = 1.0\n\n    if y_acc < -0.5:\n        r = 1.0\n        b = 1.0\n\n    return r, g, b\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v -= 10000\n    v /= 50000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        x_acc, y_acc, z_acc = GetAccData(s)\n\n        #r, g, b = ConvertToRGB(x_acc, y_acc, z_acc)\n\n        f = GetNoise(f)\n        f *= GetLight()\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1604', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:33:11.266 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:33:11.272 [MainThread] INFO    thonny: TIME/MODS 0.014 After Run 
17:34:01.902 [MainThread] INFO    thonny: TIME/MODS 50.629 Before Run 
17:34:01.905 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v -= 10000\n    v /= 50000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        f *= GetLight()\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1625', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:34:01.905 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:34:01.912 [MainThread] INFO    thonny: TIME/MODS 0.010 After Run 
17:34:38.473 [MainThread] INFO    thonny.running: Killing backend process
17:34:38.478 [Thread-154 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:34:38.573 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:34:38.589 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:34:38.672 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:34:38.687 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:34:40.853 [MainThread] INFO    thonny: TIME/MODS 38.941 Before Run 
17:34:40.857 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v -= 10000\n    v /= 50000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        f *= GetLight()\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1628', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:34:40.857 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:34:40.863 [MainThread] INFO    thonny: TIME/MODS 0.011 After Run 
17:35:11.258 [MainThread] INFO    thonny.running: Killing backend process
17:35:11.264 [Thread-156 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:35:11.359 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:35:11.377 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:35:11.464 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:35:11.478 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:35:24.542 [MainThread] INFO    thonny: TIME/MODS 43.679 Before Run 
17:35:24.545 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v -= 10000\n    v /= 50000\n    return 1.0 - v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        f *= GetLight()\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1635', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:35:24.546 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:35:24.552 [MainThread] INFO    thonny: TIME/MODS 0.010 After Run 
17:35:44.230 [MainThread] INFO    thonny.running: Killing backend process
17:35:44.237 [Thread-158 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:35:44.331 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:35:44.349 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:35:44.433 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:35:44.448 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:35:50.902 [MainThread] INFO    thonny: TIME/MODS 26.349 Before Run 
17:35:50.905 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v -= 10000\n    v /= 50000\n    return 1.0 - v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        f *= GetLight()\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1640', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:35:50.905 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:35:50.911 [MainThread] INFO    thonny: TIME/MODS 0.009 After Run 
17:36:03.896 [MainThread] INFO    thonny.running: Killing backend process
17:36:03.903 [Thread-160 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:36:03.997 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:36:04.018 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:36:04.110 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:36:04.128 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:36:10.687 [MainThread] ERROR   thonny.plugins.find_replace: Could not get seed text
Traceback (most recent call last):
  File "/usr/lib/python3.12/site-packages/thonny/plugins/find_replace.py", line 76, in __init__
    selected_lines = widget.selection_get().splitlines()
                     ^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/tkinter/__init__.py", line 1030, in selection_get
    return self.tk.call(('selection', 'get') + self._options(kw))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_tkinter.TclError: PRIMARY selection doesn't exist or form "STRING" not defined
17:36:10.693 [MainThread] INFO    thonny.ui_utils: Parent y: 89, rooty: 89, vrooty: 0
17:36:10.693 [MainThread] INFO    thonny.ui_utils: Placing .!codeview21.!finddialog with geometry +1737+772
17:36:15.239 [MainThread] INFO    thonny: TIME/MODS 24.329 Before Run 
17:36:15.242 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v -= 10000\n    v /= 50000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        f *= GetLight()\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1646', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:36:15.242 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:36:15.248 [MainThread] INFO    thonny: TIME/MODS 0.008 After Run 
17:36:43.726 [MainThread] INFO    thonny: TIME/MODS 28.478 Before Run 
17:36:43.726 [MainThread] INFO    thonny.running: Trying to execute current but runner is 'running'
17:36:43.893 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v -= 12000\n    v /= 50000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        f *= GetLight()\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1648', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:36:43.893 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:36:43.900 [MainThread] INFO    thonny: TIME/MODS 0.174 After Run 
17:36:54.195 [MainThread] INFO    thonny.running: Killing backend process
17:36:54.201 [Thread-162 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:36:54.296 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:36:54.313 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:36:54.397 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:36:54.412 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:37:15.796 [MainThread] INFO    thonny: TIME/MODS 31.896 Before Run 
17:37:15.805 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v -= 12000\n    v /= 50000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        f *= GetLight()\n        CandleLight(1.0 - f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1656', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:37:15.806 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:37:15.815 [MainThread] INFO    thonny: TIME/MODS 0.019 After Run 
17:37:18.048 [MainThread] INFO    thonny.running: Killing backend process
17:37:18.056 [Thread-164 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:37:18.149 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:37:18.166 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:37:18.250 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:37:18.263 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:37:58.033 [MainThread] INFO    thonny: TIME/MODS 42.218 Before Run 
17:37:58.037 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v -= 12000\n    v *= -1\n    v /= 50000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        f *= GetLight()\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1667', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:37:58.037 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:37:58.044 [MainThread] INFO    thonny: TIME/MODS 0.011 After Run 
17:38:06.552 [MainThread] INFO    thonny.running: Killing backend process
17:38:06.560 [Thread-166 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:38:06.653 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:38:06.674 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:38:06.772 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:38:06.788 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:38:13.472 [MainThread] INFO    thonny: TIME/MODS 15.428 Before Run 
17:38:13.481 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v -= 24000\n    v *= -1\n    v /= 50000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        f *= GetLight()\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1674', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:38:13.482 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:38:13.489 [MainThread] INFO    thonny: TIME/MODS 0.017 After Run 
17:38:29.498 [MainThread] INFO    thonny.running: Killing backend process
17:38:29.505 [Thread-168 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:38:29.599 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:38:29.619 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:38:29.704 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:38:29.722 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:38:35.006 [MainThread] INFO    thonny: TIME/MODS 21.517 Before Run 
17:38:35.014 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v -= 28000\n    v *= -1\n    v /= 50000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        f *= GetLight()\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1678', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:38:35.015 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:38:35.021 [MainThread] INFO    thonny: TIME/MODS 0.015 After Run 
17:39:07.951 [MainThread] INFO    thonny.running: Killing backend process
17:39:07.958 [Thread-170 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:39:08.052 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:39:08.070 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:39:08.153 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:39:08.168 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:39:45.819 [MainThread] INFO    thonny: TIME/MODS 70.798 Before Run 
17:39:45.829 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v -= 28000\n    v /= 50000\n    return 1.0 - v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        f *= GetLight()\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1688', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:39:45.829 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:39:45.835 [MainThread] INFO    thonny: TIME/MODS 0.015 After Run 
17:39:48.349 [MainThread] INFO    thonny.running: Killing backend process
17:39:48.353 [Thread-172 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:39:48.450 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:39:48.466 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:39:48.547 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:39:48.561 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:40:36.903 [MainThread] INFO    thonny: TIME/MODS 51.068 Before Run 
17:40:36.911 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v = 50000 - v\n    v -= 24000\n    v /= 50000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        f *= GetLight()\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1720', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:40:36.911 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:40:36.917 [MainThread] INFO    thonny: TIME/MODS 0.014 After Run 
17:41:03.038 [MainThread] INFO    thonny.running: Killing backend process
17:41:03.043 [Thread-174 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:41:03.139 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:41:03.156 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:41:03.241 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:41:03.256 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:41:19.970 [MainThread] INFO    thonny: TIME/MODS 43.053 Before Run 
17:41:19.974 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v = 50000 - v\n    v /= 50000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        f *= GetLight()\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1726', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:41:19.974 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:41:19.980 [MainThread] INFO    thonny: TIME/MODS 0.010 After Run 
17:41:30.544 [MainThread] INFO    thonny.running: Killing backend process
17:41:30.550 [Thread-176 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:41:30.644 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:41:30.665 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:41:30.750 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:41:30.766 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:41:47.869 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:41:51.689 [MainThread] INFO    thonny: TIME/MODS 31.708 Before Run 
17:41:51.693 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v = 50000 - v\n    v -= 20000\n    v /= 50000\n    print(v)\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        f *= GetLight()\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1742', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:41:51.693 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:41:51.701 [MainThread] INFO    thonny: TIME/MODS 0.012 After Run 
17:42:13.782 [MainThread] INFO    thonny.running: Killing backend process
17:42:13.790 [Thread-178 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:42:13.883 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:42:13.902 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:42:13.987 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:42:14.001 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:42:18.967 [MainThread] INFO    thonny: TIME/MODS 27.267 Before Run 
17:42:18.975 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v = 50000 - v\n    v -= 10000\n    v /= 50000\n    print(v)\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        f *= GetLight()\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1748', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:42:18.976 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:42:18.981 [MainThread] INFO    thonny: TIME/MODS 0.014 After Run 
17:42:46.257 [MainThread] INFO    thonny.running: Killing backend process
17:42:46.264 [Thread-180 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:42:46.358 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:42:46.379 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:42:46.464 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:42:46.479 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:42:53.981 [MainThread] INFO    thonny: TIME/MODS 35.000 Before Run 
17:42:53.990 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v = 50000 - v\n    v -= 10000\n    v /= 40000\n    print(v)\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        f *= GetLight()\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1755', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:42:53.991 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:42:53.996 [MainThread] INFO    thonny: TIME/MODS 0.015 After Run 
17:43:39.179 [MainThread] INFO    thonny.running: Killing backend process
17:43:39.187 [Thread-182 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:43:39.280 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:43:39.300 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:43:39.382 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:43:39.397 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:44:07.859 [MainThread] INFO    thonny: TIME/MODS 73.862 Before Run 
17:44:07.866 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v = 50000 - v\n    v -= 10000\n    v /= 40000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        f *= GetLight()\n        print(f)\n        CandleLight(f)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1775', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:44:07.866 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:44:07.875 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
17:44:35.063 [MainThread] INFO    thonny.running: Killing backend process
17:44:35.069 [Thread-184 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:44:35.163 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:44:35.180 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:44:35.260 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:44:35.275 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:44:43.792 [MainThread] INFO    thonny: TIME/MODS 35.917 Before Run 
17:44:43.800 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v = 50000 - v\n    v -= 10000\n    v /= 40000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n *= GetLight()\n        print(f)\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1781', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:44:43.800 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:44:43.806 [MainThread] INFO    thonny: TIME/MODS 0.014 After Run 
17:45:04.723 [MainThread] INFO    thonny: TIME/MODS 20.917 Before Run 
17:45:04.732 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v = 50000 - v\n    v -= 10000\n    v /= 40000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n = f * GetLight()\n        print(f)\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1797', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:45:04.732 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:45:04.738 [MainThread] INFO    thonny: TIME/MODS 0.014 After Run 
17:45:52.931 [MainThread] INFO    thonny.running: Killing backend process
17:45:52.938 [Thread-186 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:45:53.032 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:45:53.052 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:45:53.149 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:45:53.167 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:45:57.665 [MainThread] INFO    thonny: TIME/MODS 52.927 Before Run 
17:45:57.674 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v = 50000 - v\n    v -= 20000\n    v /= 40000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n = f * GetLight()\n        print(f)\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1803', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:45:57.674 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:45:57.680 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
17:46:00.455 [MainThread] INFO    thonny.running: Killing backend process
17:46:00.460 [Thread-188 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:46:00.555 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:46:00.574 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:46:00.670 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:46:00.686 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:46:07.529 [MainThread] INFO    thonny: TIME/MODS 9.848 Before Run 
17:46:07.537 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v = 50000 - v\n    v -= 30000\n    v /= 40000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n = f * GetLight()\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1810', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:46:07.538 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:46:07.544 [MainThread] INFO    thonny: TIME/MODS 0.015 After Run 
17:46:09.843 [MainThread] INFO    thonny.running: Killing backend process
17:46:09.850 [Thread-190 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:46:09.944 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:46:09.961 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:46:10.041 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:46:10.055 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:46:14.061 [MainThread] INFO    thonny: TIME/MODS 6.517 Before Run 
17:46:14.071 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v = 50000 - v\n    v -= 1000\n    v /= 40000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n = f * GetLight()\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1815', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:46:14.071 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:46:14.077 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
17:46:16.043 [MainThread] INFO    thonny.running: Killing backend process
17:46:16.049 [Thread-192 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:46:16.144 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:46:16.161 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:46:16.244 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:46:16.258 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:46:23.803 [MainThread] INFO    thonny: TIME/MODS 9.725 Before Run 
17:46:23.811 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v = 50000 - v\n    v -= 20000\n    v /= 40000\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n = f * GetLight()\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1821', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:46:23.812 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:46:23.818 [MainThread] INFO    thonny: TIME/MODS 0.015 After Run 
17:46:25.624 [MainThread] INFO    thonny.running: Killing backend process
17:46:25.629 [Thread-194 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:46:25.724 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:46:25.742 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:46:25.830 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:46:25.845 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:46:32.188 [MainThread] INFO    thonny: TIME/MODS 8.370 Before Run 
17:46:32.198 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    v = 50000 - v\n    v -= 20000\n    v /= 40000\n    print(v)\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n = f * GetLight()\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1829', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:46:32.199 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:46:32.206 [MainThread] INFO    thonny: TIME/MODS 0.018 After Run 
17:46:37.506 [MainThread] INFO    thonny.running: Killing backend process
17:46:37.512 [Thread-196 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:46:37.607 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:46:37.624 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:46:37.706 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:46:37.720 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:46:48.081 [MainThread] INFO    thonny: TIME/MODS 15.875 Before Run 
17:46:48.092 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source="import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    print(v, end='')\n    v = 50000 - v\n    v -= 20000\n    v /= 40000\n    print(v)\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n = f * GetLight()\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n", name='Run', argv=[], id='cmd_1843', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:46:48.092 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:46:48.099 [MainThread] INFO    thonny: TIME/MODS 0.017 After Run 
17:47:00.099 [MainThread] INFO    thonny.running: Killing backend process
17:47:00.104 [Thread-198 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:47:00.200 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:47:00.219 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:47:00.304 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:47:00.319 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:47:19.645 [MainThread] INFO    thonny: TIME/MODS 31.547 Before Run 
17:47:19.655 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source="import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    print(v, end=' ')\n    v = 50000 - v\n    v -= 20000\n    v /= 40000\n    print(v)\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n = f * GetLight()\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n", name='Run', argv=[], id='cmd_1861', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:47:19.656 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:47:19.661 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
17:47:25.935 [MainThread] INFO    thonny.running: Killing backend process
17:47:25.939 [Thread-200 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:47:26.036 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:47:26.053 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:47:26.134 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:47:26.149 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:47:42.563 [MainThread] INFO    thonny: TIME/MODS 22.902 Before Run 
17:47:42.574 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source="import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    print(v, end=' ')\n    v = 600 - v\n    v -= 200\n    v /= 500\n    print(v)\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n = f * GetLight()\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n", name='Run', argv=[], id='cmd_1875', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:47:42.575 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:47:42.580 [MainThread] INFO    thonny: TIME/MODS 0.017 After Run 
17:47:54.841 [MainThread] INFO    thonny.running: Killing backend process
17:47:54.846 [Thread-202 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:47:54.942 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:47:54.962 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:47:55.049 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:47:55.065 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:47:58.856 [MainThread] INFO    thonny: TIME/MODS 16.276 Before Run 
17:47:58.865 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source="import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    print(v, end=' ')\n    v = 50000 - v\n    v -= 20000\n    v /= 40000\n    print(v)\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n = f * GetLight()\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n", name='Run', argv=[], id='cmd_1879', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:47:58.865 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:47:58.871 [MainThread] INFO    thonny: TIME/MODS 0.015 After Run 
17:48:02.166 [MainThread] INFO    thonny.running: Killing backend process
17:48:02.173 [Thread-204 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:48:02.267 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:48:02.284 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:48:02.371 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:48:02.386 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:48:17.103 [MainThread] INFO    thonny: TIME/MODS 18.233 Before Run 
17:48:17.108 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source="import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    print(v, end=' ')\n    v = 50000 - v\n    v -= 20000\n    v /= 40000\n    print(v)\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n = f * GetLight()\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n", name='Run', argv=[], id='cmd_1883', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:48:17.109 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:48:17.117 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
17:48:56.671 [MainThread] INFO    thonny.running: Killing backend process
17:48:56.677 [Thread-206 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:48:56.772 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:48:56.789 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:48:56.872 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:48:56.888 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:49:51.217 [MainThread] INFO    thonny: TIME/MODS 94.101 Before Run 
17:49:51.229 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    \n    v = 50000 if v > 50000 else v\n    v = 10000 if v < 10000 else v\n    \n    v = 50000 - v\n    v -= 20000\n    v /= 50000\n    print(v)\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n = f * GetLight()\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1926', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:49:51.229 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:49:51.237 [MainThread] INFO    thonny: TIME/MODS 0.019 After Run 
17:50:23.705 [MainThread] INFO    thonny.running: Killing backend process
17:50:23.713 [Thread-208 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:50:23.806 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:50:23.823 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:50:23.905 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:50:23.920 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:51:15.060 [MainThread] INFO    thonny: TIME/MODS 83.823 Before Run 
17:51:15.068 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    \n    v = 50000 if v > 50000 else v\n    v = 10000 if v < 10000 else v\n    \n    v = 50000 - v\n    v -= 30000\n    v /= 20000\n    print(v)\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n = f * GetLight()\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1939', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:51:15.069 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:51:15.074 [MainThread] INFO    thonny: TIME/MODS 0.014 After Run 
17:52:13.119 [MainThread] INFO    thonny.running: Killing backend process
17:52:13.124 [Thread-210 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:52:13.220 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:52:13.239 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:52:13.321 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:52:13.336 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:52:21.366 [MainThread] INFO    thonny: TIME/MODS 66.292 Before Run 
17:52:21.378 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    \n    v = 50000 if v > 50000 else v\n    v = 10000 if v < 10000 else v\n    \n    v = 50000 - v\n    v -= 30000\n    v /= 10000\n    print(v)\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n = f * GetLight()\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1943', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:52:21.378 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:52:21.385 [MainThread] INFO    thonny: TIME/MODS 0.019 After Run 
17:52:28.279 [MainThread] INFO    thonny.running: Killing backend process
17:52:28.283 [Thread-212 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:52:28.380 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:52:28.400 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:52:28.486 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:52:28.501 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:52:33.202 [MainThread] INFO    thonny: TIME/MODS 11.817 Before Run 
17:52:33.214 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    \n    v = 50000 if v > 50000 else v\n    v = 10000 if v < 10000 else v\n    \n    v = 50000 - v\n    v -= 35000\n    v /= 10000\n    print(v)\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n = f * GetLight()\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1948', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:52:33.215 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:52:33.223 [MainThread] INFO    thonny: TIME/MODS 0.021 After Run 
17:52:54.259 [MainThread] INFO    thonny.running: Killing backend process
17:52:54.263 [Thread-214 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:52:54.359 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:52:54.377 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:52:54.459 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:52:54.475 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:52:58.731 [MainThread] INFO    thonny: TIME/MODS 25.508 Before Run 
17:52:58.738 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    \n    v = 50000 if v > 50000 else v\n    v = 10000 if v < 10000 else v\n    \n    v = 50000 - v\n    v -= 35000\n    v /= 5000\n    print(v)\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n = f * GetLight()\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1953', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:52:58.739 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:52:58.744 [MainThread] INFO    thonny: TIME/MODS 0.013 After Run 
17:53:56.383 [MainThread] INFO    thonny.running: Killing backend process
17:53:56.390 [Thread-216 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:53:56.484 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:53:56.502 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:53:56.587 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:53:56.602 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:55:27.403 [MainThread] INFO    thonny: TIME/MODS 148.659 Before Run 
17:55:27.410 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import random\nimport time\n\nimport machine as m\nfrom IMU import MPU60X0\n\nR = m.PWM(m.Pin(2))\nG = m.PWM(m.Pin(3))\nB = m.PWM(m.Pin(4))\nLS = m.ADC(0)\n\nR.freq(1000)\nG.freq(1000)\nB.freq(1000)\n\nMAX_VALUE = 2**16 - 1\nf = 0.5\n\ndef Terminate():\n    R.duty_u16(0)\n    G.duty_u16(0)\n    B.duty_u16(0)\n    \n\ndef GetNoise(f: float):\n    r = random.random() - 0.5\n    if r < 0:\n        f += 0.05\n    else:\n        f -= 0.05\n    f = 0.8 if f > 0.8 else f\n    f = 0.3 if f < 0.3 else f\n    return f\n\ndef GetLight():\n    v = LS.read_u16()\n    \n    v = 50000 if v > 50000 else v\n    v = 10000 if v < 10000 else v\n    \n    v = 50000 - v\n    v -= 35000\n    v /= 5000\n    print(v)\n    return v\n\n\ndef CandleLight(strength: float):\n    if strength > 1.0:\n        strength = 1.0\n    elif strength < 0.0:\n        strength = 0.0\n    \n    rf = 1.0 * strength\n    gf = 0.1 * strength\n    bf = 0.0 * strength\n    \n    R.duty_u16(int(MAX_VALUE * rf))\n    G.duty_u16(int(MAX_VALUE * gf))\n    B.duty_u16(int(MAX_VALUE * bf))\n\ntry:\n    while True:  # 50 ms周期（=20 Hz）でデータ取得．\n        ticks_st = time.ticks_ms()  # 電源ONからの経過ミリ秒\n        \n        f = GetNoise(f)\n        n = f * GetLight()\n        CandleLight(n)\n\n        ticks_fin = time.ticks_ms()\n        time.sleep_ms(\n            50 - time.ticks_diff(ticks_fin, ticks_st)\n        )  # (50-経過時間)ミリ秒待機\nexcept KeyboardInterrupt:\n    Terminate()\n\n\n', name='Run', argv=[], id='cmd_1957', local_cwd='/home/uPiscium/Documents/University/B2-3rd/Ex1A/07')
17:55:27.410 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:55:27.420 [MainThread] INFO    thonny: TIME/MODS 0.016 After Run 
17:56:04.191 [MainThread] INFO    thonny.running: Killing backend process
17:56:04.196 [Thread-218 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:56:04.291 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
17:56:04.308 [MainThread] INFO    thonny.running: Starting the backend: ['/usr/bin/python', '-s', '-u', '-B', '/usr/lib/python3.12/site-packages/thonny/plugins/rp2040/rp2040_back.py', "{'clean': True, 'port': '/dev/ttyACM0', 'dtr': None, 'rts': None, 'submit_mode': 'raw_paste', 'interrupt_on_connect': True, 'write_block_size': 64, 'write_block_delay': None, 'proxy_class': 'RaspberryPiPicoBackendProxy', 'sync_time': True, 'validate_time': False, 'local_rtc': True}"] /home/uPiscium/Documents/University/B2-3rd/Ex1A/07
17:56:04.389 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
17:56:04.404 [MainThread] INFO    thonny.plugins.micropython.mp_front: Listing serial ports
17:57:51.264 [MainThread] INFO    thonny.running: Killing backend process
17:57:51.268 [Thread-220 (_listen_stdout)] INFO    thonny.running: Reader got EOF
17:57:51.365 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
